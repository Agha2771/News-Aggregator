version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - .:/var/www
    networks:
      - app-network
    depends_on:
      - db
      - redis
    environment:
      DB_CONNECTION: pgsql
      DB_HOST: db
      DB_PORT: 5432
      DB_DATABASE: news_aggregator
      DB_USERNAME: postgres
      DB_PASSWORD: postgres
      REDIS_HOST: redis
      REDIS_PORT: 6379

  web:
    image: nginx:alpine
    ports:
      - "8000:80"
    volumes:
      - .:/var/www 
      - ./nginx.conf:/etc/nginx/conf.d/default.conf  
    networks:
      - app-network

  nginx:
    image: nginx:alpine
    volumes:
      - .:/var/www
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "8001:80" 
    networks:
      - app-network

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    networks:
      - app-network


  cron:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - .:/var/www
    command: ["cron", "-f"]  # Keep the cron service running in the foreground
    networks:
      - app-network

  db:
    image: postgres:latest
    environment:
      POSTGRES_DB: news_aggregator
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  db_data:
